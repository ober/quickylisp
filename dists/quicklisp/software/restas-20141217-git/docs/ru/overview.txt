.. _overview:

Обзор
=====

`RESTAS`_ - фреймворк для разработки web-приложений на языке Common Lisp.
Ключевые свойства:

* Разрабатывался для упрощения разработки веб-приложений, придерживающихся
  архитектурного стиля `REST`_.

* Основан на `Hunchentoot`_. Хотя RESTAS и упрощает многие аспекты
  разработки веб-приложений по сравнению с `Hunchentoot`_, но знание
  `Hunchentoot`_ является обязательными, по крайней мере, в области
  работы с :var:`hunchentoot:*request*` и :var:`hunchentoot:*reply*`.

* Диспетчеризация запросов на основе системы маршрутов. Является ключевой
  концепцией RESTAS и в своей области предоставляет возможности,
  не имеющие аналогов в других веб-фреймворках.
  
* Механизм повторного использования кода, система модулей, тоже является
  ключевой концепцей. Обеспечивает гибкий механизм повторного использования
  модулей и предельную простоту их разработки.

* Полная поддержка интерактивной разработки. Любой код, относящийся к RESTAS
  (такой, как определение маршрута, модуля или подмодуля) может быть в любой
  момент "перекомпилирован" непосредственно при работе в `SLIME`_ и внесённые
  изменения можно немедленно увидеть в браузере. Никаких перезагрузок
  веб-сервера и других сложных действий.

* Интеграция со `SLIME`_. В данный момент она в основном позволяет исследовать
  внутреннее устройство веб-приложений на основе стандартного "SLIME Inspector".
  Например, доступна наглядная "карта сайта" и простая навигация по коду
  приложения на её основе.

* Простой в использовании "pure lisp" способ демонизации веб-приложений на основе
  `RESTAS`_ и `SBCL`_ в Linux без использования `Screen`_
  или `detachtty`_, которые традиционно используются для решения данной задачи
  и создают массу проблем при интенсивном использовании.

* RESTAS не является MVC-фреймворком, хотя и не противоречит данной концепции.
  С точки зрения MVC `RESTAS`_ обеспечивает уровень контролёра. Тем не менее,
  `RESTAS`_ предоставляет эффективный и гибкий механизм разделения логики и представления,
  поскольку он не накладывает каких-либо ограничений на структуру разрабатываемых
  приложений. Разделение модели и контролёра может быть эффективно выполнено
  средствами Common Lisp и поэтому не нуждается в какой-либо специальной поддержке
  со стороны фреймворка.

* RESTAS не содержит библиотеки шаблонов. Тем не менее, рекомендуется использовать таковые
  при разработке реальных веб-приложений. Автор рекомендует `cl-closure-template`_.
  Другой известной библиотекой шаблонов является `HTML-TEMPLATE`_.

`RESTAS`_ распространяется на условиях лицензии `Lisp LGPL`_.

.. _RESTAS: http://restas.lisper.ru/
.. _SLIME: http://common-lisp.net/project/slime/    
.. _Hunchentoot: http://www.weitz.de/hunchentoot/
.. _SBCL: http://www.sbcl.org/
.. _Screen: http://www.gnu.org/software/screen/
.. _detachtty: http://www.cliki.net/detachtty
.. _HTML-TEMPLATE: http://www.weitz.de/html-template/
.. _cl-closure-template: http://github.com/archimag/cl-closure-template
.. _REST: http://ru.wikipedia.org/wiki/REST
.. _Lisp LGPL: http://opensource.franz.com/preamble.html
