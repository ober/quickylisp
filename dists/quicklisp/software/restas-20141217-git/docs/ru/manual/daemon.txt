.. _manual-daemon: 

Демонизация
===========

При развертывании Common Lisp приложения (например, сайта) на сервере под
управлением GNU/Linux возникает проблема организации lisp-демона, что связано
с некоторыми техническими проблемами, которые, вероятно, могут вызвать у
начинающих некоторое непонимание (или даже ужас).

Корень этих проблем в том, что обычно lisp процесс не может быть оторван от 
терминала (причины этого восходят к тем далёким временам, когда компьютеры были
большими...) и при закрытии стандартного потока ввода немедленно завершает свою работу.

Для решения этой проблемы известно несколько крайне неудобных и ненадёжных
методов (см. `swank-daemon`_ и `detachtty`_). Но для развёртывания веб-приложений на
базе `RESTAS`_, использующих `SBCL`_ в GNU/Linux, есть простой и удобный
инструмент: скрипт `restas-daemon.lisp`_, который находится в директории contrib
пакета `RESTAS`_. Создать демона с помощью этого скрипта очень просто:
::

  sbcl --load /path/to/restas/contrib/restas-daemon.lisp /path/to/daemon.conf COMMAND

Как видно, данный скрипт принимает два параметра: путь к файлу конфигурации демона
и имя команды. Поддерживаются следующие команды:

* **start** - запуск

* **stop** - остановка

* **restart** - рестарт

* **kill** - убийство, если почему-то демон не хочет останавливаться с помощью stop

* **zap** - удалят pid-файл, это может потребоваться, если демон был остановлен как-нибудь 
  грубо

* **nodaemon** - в основном тоже, что и start (в том числе происходит смена прав и т.п.),
  но при этом процесс не делает себе fork и не отключается от терминала, что даёт
  возможность наблюдать весь его вывод - удобно для отладки демона.
  
Файл конфигурации демона может содержать определение нескольких переменных, влияющих на 
поведение демона, вот полный конфиг моего домашнего демона:

.. code-block:: common-lisp

  (defparameter *name* "homesite")

  (defparameter *user* "andrey")

  (defparameter *swankport* 9000)

  (defparameter *asdf-central-registry*
   '(#P"/usr/share/common-lisp/systems/" #P"/home/andrey/development/common-lisp/systems/"))

  (defparameter *asdf-load-systems* '(#:homesite))

  (defparameter *sites*  '((#:homesite nil 80)))

Возможны следующие параметры:

* :var:`*name*` - имя демона, в данный момент единственный обязательный параметр

* :var:`*user*` - имя пользователя, от которого должен работать демон, по-умолчанию
  совпадает с именем демона

* :var:`*group*` - группа пользователя

* :var:`*fasldir*` - путь к каталогу, в который будут складываться fasl-файлы,
  по-умолчанию определяется из имени демона как

  .. code-block:: common-lisp
  
    (format nil "/var/cache/~A/fasl/" *name*)
  
* :var:`*pidfile*` - pid-файла демона, по-умолчанию

  .. code-block:: common-lisp

    (format nil "/var/run/~A/~A.pid" *name* *name*)

* :var:`*swankport*` - порт, на котором следует запускать swank, если не указан
  или nil, то swank не запускается
  
* :var:`*default-host-redirect*` - в `RESTAS`_ сайты запускаются с помощью
  :fun:`restas:start-site`, при этом можно указать имя хоста (аналог виртуальных хостов),
  данная переменная указывает хост, на который будет производиться редирект, если для
  хоста запроса нет сайта, например, на `lisper.ru`_ можно попасть набрав в браузере
  http://www.lisper.ru/, http://lisp.catap.ru/ или просто прямой адрес, все такие запросы
  переплавляются на `lisper.ru`_.
  
* :var:`*asdf-central-registry*` - список директорий, в которых будет производиться поиск систем

* :var:`*asdf-load-systems*` - список систем, которые необходимо загрузить при старте демона

* :var:`*sites*` - список сайтов, которые необходимо запустить при запуске демона с помощью
  функции :fun:`restas:start`. В качестве сайта может быть указано просто имя модуля
  `RESTAS`_, либо список, содержащий имя модуля, имя хоста и порт (а также, при необходимости
  в защищённом соединении по протоколу SSL, может быть указан 4-ый параметр с соответствующими
  настройками, см. ниже). Например, сайт http://restas.lisper.ru и сайт `lisper.ru`_ запускаются 
  в одном процессе, а в конфиге демона переменная :var:`*sites*` определена так:
  
  .. code-block:: common-lisp

    (defparameter *sites* 
      '((#:rulisp "lisper.ru" 80)
        (#:rulisp.restas "restas.lisper.ru" 80)))
    
  При использовании безопасного соединения, для сайта lisper.ru настройки могли бы быть такими:

  .. code-block:: common-lisp

    (defparameter *sites* 
      '((#:rulisp "lisper.ru" 443 ("/path/to/ssl_cert.cer" "/path/to/private.key" "your_pass"))
        (#:rulisp.restas "restas.lisper.ru" 80)))

  Если для использования ключа пароль не требуется, то в списке с SSL-настройками третий элемент 
  "your_pass" использовать не нужно.

Для систем на базе Gentoo есть специальная поддержка. При установке `RESTAS`_ с помощью 
`archimag-lisp-overlay`_ в каталог /etc/init.d/ добавляется скрипт restas.lo. Теперь,
для создания initd-скрипта необходимо создать симлинк на этот файл и создать
конфигурационный файл в /etc/conf.d/, например:
::

  cd /etc/init.d/
  ln -s restas.lo homesite
  emacs /etc/conf.d/homesite.conf
  /etc/init.d/homesite start

.. _RESTAS: http://restas.lisper.ru/
.. _swank-daemon: http://www.cliki.net/swank-daemon
.. _detachtty: http://www.cliki.net/detachtty
.. _restas-daemon.lisp: http://github.com/archimag/restas/blob/master/contrib/restas-daemon.lisp
.. _SBCL: http://www.sbcl.org/
.. _lisper.ru: http://lisper.ru/
.. _archimag-lisp-overlay: http://github.com/archimag/archimag-lisp-overlay
